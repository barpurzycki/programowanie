#include "pch.h"
#include <iostream>
#include <vector>
#include <map>
#include <ctime>

using namespace std;

void wypisz(int w) 
{
	cout << w << endl;
}

void wypisz(vector<int>tab)
{
	for (int i = 0; i < tab.size(); i++) 
	{
		cout << tab[i] << " ";;
	}
	cout << "\n";
}

void wypisz(map<int, int>m)
{
	for (auto item : m)
	{
		cout << item.first << " " << item.second << endl;
	}
}

int min(vector<int>tab) 
{
	int min = tab[0];
	for (int i = 0; i < tab.size(); i++) 
	{
		if (min > tab[i]) 
		{
			min = tab[i];
		}
	}
	return min;
}

bool czyNalezy(vector<int>tab, int el)
{
	for (int i = 0; i < tab.size(); i++)
	{
		if (el == tab[i]) 
		{
			return true;
		}
	}
	return false;
}

bool czyZawiera(vector<int>tab, vector<int>podzb)
{
	for (int i = 0; i < podzb.size(); i++)
	{
		if (!czyNalezy(tab, podzb[i]))
		{
			return false;
		}
	}
	return true;
}

vector<int>unikalnosc(vector<int>tab) 
{
	vector<int>wynik;
	for (int i=0; i < tab.size(); i++) 
	{
		if (!czyNalezy(wynik, tab[i]))
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

/*map<int, int> czestosc(vector<int>tab) 
{
	map<int, int>wynik;
	for (int i=0; i < tab.size(); i++) 
	{
		if (!czyNalezyKlucz(wynik, tab[i]))
		{
			wynik.insert({ tab[i], 1 });
		}
		else 
		{
			wynik[tab[i]]++;
		}
	}
	return wynik;
}
*/ 
bool czyNalezyKlucz(map<int, int>m, int klucz) 
{
	for (auto item : m) 
	{
		if (item.first == klucz) 
		{
			return true;
		}
	}
	return false;
}

vector<int>podzielnosc(vector<int>tab, int dzielnik, int reszta=0) 
{
	vector<int>wynik;
	for (int i = 0; i < tab.size(); i++) 
	{
		if (tab[i] % dzielnik == reszta) 
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

vector<int> generuj(int ile, int max=50, int min=0) 
{
	
	vector<int>wynik;
	for (int i = 0; i < ile; i++) 
	{
		wynik.push_back(rand() % (max - min) + min);
	}
	return wynik;
}

int main()
{
	srand(time(NULL));
	// wypisz(3);
	vector<int>tab = { 1, 3, 5 };
	// wypisz(tab);
	// wypisz(podzielnosc(tab, 3));
	map<int, int>m;
	// int a;
	// cin >> a;
	// <int>losowy = generuj(a);
	// wypisz(losowy);
	// losowy = podzielnosc(losowy, 7);
	// wypisz(losowy);

	int ile;
	cin >> ile;

	for (int i = 1; i < ile; i=i+2) 
	{
		for (int j = 0; j <= i; j++)
		{
			cout << "*";
		}
		cout << "\n";
	}
}
